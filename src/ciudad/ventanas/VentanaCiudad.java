/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ciudad.ventanas;

import ciudad.crud.CiudadCrud;
import ciudad.entidades.Ciudad;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Danie
 */
public class VentanaCiudad extends javax.swing.JDialog {

    /**
     * Creates new form VentanaCiudad
     */
    public VentanaCiudad(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CampoNombre = new javax.swing.JTextField();
        CampoPoblacion = new javax.swing.JTextField();
        CampoPais = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        impHistorica = new javax.swing.JLabel();
        BotonGuardar = new javax.swing.JButton();
        Mostrar = new javax.swing.JButton();
        BotonEditar = new javax.swing.JButton();
        BotonEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 0), 2, true), "Datos de la ciudad\n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        CampoPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoPaisActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombre");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Poblacion");

        impHistorica.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        impHistorica.setText("Pais");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(impHistorica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CampoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoPais, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoPais, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(impHistorica))
                .addGap(65, 65, 65))
        );

        BotonGuardar.setText("Guardar");
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });

        Mostrar.setText("Mostrar");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        BotonEditar.setText("Editar");
        BotonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEditarActionPerformed(evt);
            }
        });

        BotonEliminar.setText("Eliminar");
        BotonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("REGISTRE LOS DATOS DE LA CIUDAD");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ciudad/ventanas/iconos/IconCity256px.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonGuardar)
                        .addGap(44, 44, 44)
                        .addComponent(Mostrar)
                        .addGap(38, 38, 38)
                        .addComponent(BotonEditar)
                        .addGap(55, 55, 55)
                        .addComponent(BotonEliminar)
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonGuardar)
                    .addComponent(Mostrar)
                    .addComponent(BotonEditar)
                    .addComponent(BotonEliminar))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CampoPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoPaisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoPaisActionPerformed

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarActionPerformed
        // TODO add your handling code here:
         CiudadCrud crud = new CiudadCrud();

    String nombre = CampoNombre.getText();
    String poblacionStr = CampoPoblacion.getText();
    String pais = CampoPais.getText();

    if (nombre.isEmpty() || poblacionStr.isEmpty() || pais.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int poblacion = Integer.parseInt(poblacionStr);

        // Validar si ya existe una ciudad con el mismo nombre
        boolean existe = crud.listarCiudades()
                             .stream()
                             .anyMatch(ciudad -> ciudad.getNombre().equalsIgnoreCase(nombre));

        if (existe) {
            JOptionPane.showMessageDialog(this, "Ya existe una ciudad con el mismo nombre.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear y guardar la nueva ciudad
        Ciudad nuevaCiudad = new Ciudad();
        nuevaCiudad.setNombre(nombre);
        nuevaCiudad.setPoblacion(poblacion);
        nuevaCiudad.setPais(pais);

        crud.agregarCiudad(nuevaCiudad);
        JOptionPane.showMessageDialog(this, "Ciudad guardada correctamente.");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "La población debe ser un valor numérico.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_BotonGuardarActionPerformed

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        // TODO add your handling code here:
        CiudadCrud crud = new CiudadCrud();
    List<Ciudad> ciudades = crud.listarCiudades();

    if (ciudades.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No hay ciudades registradas.", "Información", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    StringBuilder mensaje = new StringBuilder("Ciudades registradas:\n");
    for (Ciudad ciudad : ciudades) {
        mensaje.append("- Nombre: ").append(ciudad.getNombre()).append("\n")
               .append("  Población: ").append(ciudad.getPoblacion()).append("\n")
               .append("  País: ").append(ciudad.getPais()).append("\n\n");
    }

    JOptionPane.showMessageDialog(this, mensaje.toString(), "Ciudades Registradas", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_MostrarActionPerformed

    private void BotonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEditarActionPerformed
        // TODO add your handling code here:
         CiudadCrud crud = new CiudadCrud();

    String nombre = CampoNombre.getText();

    if (nombre.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar el nombre de la ciudad a editar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    Ciudad ciudadExistente = crud.listarCiudades()
                                 .stream()
                                 .filter(ciudad -> ciudad.getNombre().equalsIgnoreCase(nombre))
                                 .findFirst()
                                 .orElse(null);

    if (ciudadExistente == null) {
        JOptionPane.showMessageDialog(this, "No se encontró una ciudad con el nombre especificado.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int nuevaPoblacion = Integer.parseInt(CampoPoblacion.getText());
        ciudadExistente.setPoblacion(nuevaPoblacion);
        ciudadExistente.setPais(CampoPais.getText());

        crud.actualizarCiudad(nombre, ciudadExistente);
        JOptionPane.showMessageDialog(this, "Ciudad actualizada correctamente.");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "La población debe ser un valor numérico.", "Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_BotonEditarActionPerformed

    private void BotonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarActionPerformed
        // TODO add your handling code here:
       CiudadCrud crud = new CiudadCrud();

    String nombre = CampoNombre.getText();

    if (nombre.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe ingresar el nombre de la ciudad a eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    boolean eliminado = crud.eliminarCiudad(nombre);

    if (eliminado) {
        JOptionPane.showMessageDialog(this, "Ciudad eliminada correctamente.");
    } else {
        JOptionPane.showMessageDialog(this, "No se encontró una ciudad con el nombre especificado.", "Error", JOptionPane.ERROR_MESSAGE);
    } 
        
    }//GEN-LAST:event_BotonEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCiudad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaCiudad dialog = new VentanaCiudad(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonEditar;
    private javax.swing.JButton BotonEliminar;
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JTextField CampoNombre;
    private javax.swing.JTextField CampoPais;
    private javax.swing.JTextField CampoPoblacion;
    private javax.swing.JButton Mostrar;
    private javax.swing.JLabel impHistorica;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
